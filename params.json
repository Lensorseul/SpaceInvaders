{"name":"Projet - Space Invaders 3D","tagline":"Projet de Synthèse d'Images - Berger Sébastien - Toulouze Franck","body":"# Introduction\r\n\r\nCe projet consiste a développer un clone 3D du jeu Space Invaders. Le jeu devra tourner dans un navigateur Web et sera constitué de primitives graphiques 3D animées. La principale contrainte logicielle est de s'appuyer sur la bibliothèque Three.js. Pour notre jeu nous avons décider de rester dans l'univers rétro du jeu de base.\r\n\r\n# Déroulement du jeu\r\n\r\nAu lancement du jeu la caméra se situe loin au dessus du plateau de jeu puis la caméra se déplace au niveau du plateau. A ce moment là, un simple click sur le texte 3D permet de lancer la partie. Le joueur peut se déplacer sur la droite ou la gauche à l'aide des flèches directionnelles et tirer avec la touche espace. Les alliens pendant ce temps se rapproche inexorablement vers le joueur en essayant de lui tirer dessus. Le jeu comporte 3 niveaux qui deviennent de plus en plus difficile(la vitesse de déplacement, le nombre de tir et le nombre d'alliens augmentent avec ces niveaux.\r\n\r\n# Technologie utilisé\r\n\r\nPour ce projet nous avons décidé d'utiliser le paradigme de programmation orienté objet qui permet d'avoir une plus grande flexibilité et maintenabilité du code. De ce fait nous avons chercher ce qui était possible de faire avec JavaScript. La programmation orientée prototype est un style de programmation orientée objet qui n'utilise pas les classes. La réutilisation des propriétés d'un objet (appelée héritage pour les langages à classe) est effectuée via des objets qui seront des prototypes pour d'autres objets. \r\n\r\n# Les classes\r\n\r\n## L’environnement\r\n\r\n## Les objets de la scène\r\n\r\nTous les objets de la scène(vaisseau, invaders, défense, ...) sont construit de la même façon. Ils héritent de THREE.Group  et sont construit par rapport a une matrice. Les objets sont constituer de cubes unitaires et sont fusionnés pour formés un unique \"cubes\" mise a part les défense car il faut pouvoir matérialiser les dégâts des balle sur elles.\r\n\r\n# Les choix d'implémentation\r\n\r\n## Dialogues avec l'utilisateur\r\n\r\nL'utilisateur doit pouvoir interagir avec le jeu, pour cela nous avons décidé de mettre des texte en 3D directement dans la scène. Pour que cela puisse fonctionner il a fallu utiliser des Raycaster pour pouvoir vérifier si l'utilisateur click bien sur un texte ou pas. \r\n\r\n## Points de vue caméra\r\n\r\nL'utilisateur à plusieurs choix de caméra possible. Pour une question d'esthétique les mouvements de changements de caméra sont associés avec TWEEN qui permet de faire des mouvement fluide.\r\n\r\n## Collisions\r\n\r\nLes balles du joueurs disparaissent lorsqu'elles arrivent trop loin dans la scène ou qu'elles touchent soit un ennemi ou une défense. S'il s'agit d'un ennemi alors on l'envoi dans le score et on le fait disparaître à l'aide d'un TWEEN et s'il s'agit d'une défense alors on casse la défense. De même pour les balles des ennemis.\r\n\r\n## Intelligence artificielle de l'adversaire\r\n\r\nAu niveau 3 nous avons décidé de créer un vaisseau mère placé derrière les ennemis et qui tire sur le joueur mais que le joueur ne peut pas tuer. Ce vaisseau tire aléatoirement sur la position du joueur ce qui implique que le joueur ne peut pas rester longtemps immobile.\r\n\r\n## Musique et sons\r\n\r\nLe jeu comporte une musique d'ambiance et des effets lorsqu'on change de niveau, perde, tire, active le bouclier d'invincibilité, les ennemis tire ou qu'on perde.\r\n\r\n## Triche\r\n\r\nTouche 'i' : mode invincible. Les méchants aliens ne se rapprochent plus et leurs missiles ne peuvent plus rien contre le gentil vaisseau. Nous activons de ce fait un bouclier tout autour du vaisseau et le faisons exploser lorsqu'on le désactive à l'aide d'un TWEEN.\r\n\r\nTouche 'k' : kill les tous ! L'appui sur 'k' produit le même effet que si tous les aliens venaient d'être touché par un gentil missile. Cela nous permet de passer plus facilement au niveau suivant. Par contre aucun point n'est gagné par l'intermédiaire par cette honteuse feinte.\r\n\r\n## Les plus \r\n\r\nSi t'en vois ^^\r\n\r\n# Les librairies\r\n\r\n* Tween.js : Permet de faire des mouvements fluides \r\n* Threex.js : Librairie dédiée au jeu avec Thee.js\r\n* Buzz.js ; Facilite l'ajout et la gestion de la musique\r\n* Librairie de postprocessing et shaders : Permet de changer l'état de la caméra avec plusieurs effets possible\r\n\r\n# Conclusion\r\n \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}